type User{
    id : ID!
    firstName : String!
    lastName : String!
    email : String!
    password : String!
},

input UserInput{
    firstName : String!
    lastName : String!
    email : String!
    password : String!
},

type Login{
    id: ID!
    firstName: String!
    lastName: String!
    email : String!
    token : String!

},

input LoginInput{
    email : String!
    password : String!
},

type sentMail{
    email: String
    message: String
},

input forgotPassword{
    email: String!
},

type reset{
    id : ID!
    firstName : String!
    lastName : String!
    email : String!
}

input resetPassword{
    email: String!
    newPassword: String!
    resetcode: String!
},

type Note {
    id: ID
    email: String
    title: String
    description: String
},

input NoteInput {
    email: String!
    title: String
    description: String
},

type Query{
    getAllUsers : [User]
    getAllNotes : [Note]
},

type Mutation {
    registerUser( path : UserInput ):User
    loginUser( path : LoginInput ):Login
    forgotPassword( path : forgotPassword ):sentMail
    resetPassword( path : resetPassword ):reset
    createNote(path: NoteInput): Note
    editNote(id: ID, path: NoteInput): Note
    deleteNote(id: ID): String
}